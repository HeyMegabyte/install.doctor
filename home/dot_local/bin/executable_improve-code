#!/usr/bin/env bash
# @file .local/bin/improve-code
# @brief Inline code improvement tool using ChatGPT
# @description
#     This script utilizes `code2prompt` and `sgpt` to analyze and improve a code file passed as an argument.
#     It performs an inline replacement of the code with recommendations generated by ChatGPT, ensuring
#     artifacts are cleaned up after execution.

# Constants for temporary files
TMP_OUTPUT="$(mktemp)"
SGPT_OUTPUT="$(mktemp)"

# @description Main function to process the input file
# @param $1 The path to the code file to be improved
main() {
    if [[ -z "$1" ]]; then
        gum log -sl error "No file path provided. Please specify a file to improve."
        exit 1
    fi

    local INPUT_FILE="$1"

    if [[ ! -f "$INPUT_FILE" ]]; then
        gum log -sl error "The specified file does not exist: $INPUT_FILE"
        exit 1
    fi

    # Generate prompt from code
    gum log -sl info "Generating prompt from the code file..."
    if ! code2prompt "$INPUT_FILE" --output "$TMP_OUTPUT" -t "$HOME/.config/code2prompt/general-code.hbs"; then
        gum log -sl error "Failed to generate prompt using code2prompt."
        cleanup
        exit 1
    fi

    # Get recommendations from ChatGPT
    gum log -sl info "Fetching recommendations from ChatGPT..."
    if ! cat "$TMP_OUTPUT" | sgpt > "$SGPT_OUTPUT"; then
        gum log -sl error "Failed to fetch recommendations from ChatGPT."
        cleanup
        exit 1
    fi

    # Remove ` marks in response
    gum log -sl info "Cleaning up response"
    if command -v gsed > /dev/null; then
      gsed -i '/^```$/d;$ { /^```$/d }' "$SGPT_OUTPUT"
    elif command -v sed > /dev/null; then
      sed -i '/^```$/d;$ { /^```$/d }' "$SGPT_OUTPUT"
    else
      gum log -sl warn "Both sed and gsed are missing from the PATH"
    fi

    # Replace the content of the input file
    gum log -sl info "Replacing content of the input file with improvements..."
    if ! mv "$SGPT_OUTPUT" "$INPUT_FILE"; then
        gum log -sl error "Failed to update the input file: $INPUT_FILE"
        cleanup
        exit 1
    fi

    gum log -sl info "Code improvement completed successfully!"
    cleanup
}

# @description Cleans up temporary files
cleanup() {
    rm -f "$TMP_OUTPUT" "$SGPT_OUTPUT"
    gum log -sl info "Cleaned up temporary files."
}

# Execute the main function
main "$@"
