{{- if (stat (joinPath .host.home ".config" "age" "chezmoi.txt")) -}}
#!/usr/bin/env bash
# @file Secrets helper
# @brief Helper file that is sourced by the script `. ~/.config/shell/private.sh` to set secret environment variables
# @description
#     This script can be invoked by running `. ~/.config/shell/private.sh`. This script will import secret environment variables
#     into the System keyring if `envchain` is installed, and then sets them in the current shell. If `envchain` is not
#     available, secret environment variables are not stored in System keyring but are exported as environment variables.
#     Environment variables that are not secrets are always set in the current shell.

### Import environment variables into `envchain`
if command -v envchain > /dev/null; then
    logg info 'Importing environment variables into the System keyring`
    ### Ansible
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "ANSIBLE_GALAXY_TOKEN")) }}{{ includeTemplate "secrets/ANSIBLE_GALAXY_TOKEN" | decrypt | nospace }}{{ else }}{{ env "ANSIBLE_GALAXY_TOKEN" }}{{ end }}" | envchain -s default ANSIBLE_GALAXY_TOKEN > /dev/null
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "ANSIBLE_VAULT_PASSWORD")) }}{{ includeTemplate "secrets/ANSIBLE_VAULT_PASSWORD" | decrypt | trim }}{{ else }}{{ env "ANSIBLE_VAULT_PASSWORD" }}{{ end }}" | envchain -s default ANSIBLE_VAULT_PASSWORD > /dev/null
    echo "$ANSIBLE_VAULT_PASSWORD" | envchain -s default AVP > /dev/null

    ### Google Cloud SDK
    echo "{{ .user.gcloud.coreProject }}" | envchain -s default CLOUDSDK_CORE_PROJECT > /dev/null
    echo "{{ .user.gcloud.email }}" | envchain -s default GCE_SERVICE_ACCOUNT_EMAIL > /dev/null
    echo "$HOME/.config/gcloud/gcp.json" | envchain -s default GCE_CREDENTIALS_FILE > /dev/null

    ### CloudFlare
    echo "" | envchain -s default LEXICON_CLOUDFLARE_TOKEN > /dev/null
    echo "{{ .user.cloudflare.username }}" | envchain -s default LEXICON_CLOUDFLARE_USERNAME > /dev/null

    ### DockerHub
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "DOCKERHUB_TOKEN")) }}{{ includeTemplate "secrets/DOCKERHUB_TOKEN" | decrypt }}{{ else }}{{ env "DOCKERHUB_TOKEN" }}{{ end }}" | envchain -s default DOCKERHUB_TOKEN > /dev/null
    echo "$DOCKERHUB_TOKEN" | envchain -s default DOCKERHUB_REGISTRY_PASSWORD > /dev/null

    ### GitHub
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "GITHUB_TOKEN")) }}{{ includeTemplate "secrets/GITHUB_TOKEN" | decrypt }}{{ else }}{{ env "GITHUB_TOKEN" }}{{ end }}" | envchain -s default GH_TOKEN > /dev/null
    echo "$GH_TOKEN" | envchain -s default GITHUB_TOKEN > /dev/null

    ### GitLab
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "GITLAB_TOKEN")) }}{{ includeTemplate "secrets/GITLAB_TOKEN" | decrypt }}{{ else }}{{ env "GITLAB_TOKEN" }}{{ end }}" | envchain -s default GL_TOKEN > /dev/null
    echo "$GL_TOKEN" | envchain -s default GITLAB_TOKEN > /dev/null

    ### Heroku
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "HEROKU_API_KEY")) }}{{ includeTemplate "secrets/HEROKU_API_KEY" | decrypt }}{{ else }}{{ env "HEROKU_API_KEY" }}{{ end }}" | envchain -s default HEROKU_API_KEY > /dev/null

    ### NPM
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "NPM_TOKEN")) }}{{ includeTemplate "secrets/NPM_TOKEN" | decrypt }}{{ else }}{{ env "NPM_TOKEN" }}{{ end }}" | envchain -s default NPM_TOKEN > /dev/null

    ### OpenAI
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "OPENAI_API_KEY")) }}{{ includeTemplate "secrets/OPENAI_API_KEY" | decrypt }}{{ else }}{{ env "OPENAI_API_KEY" }}{{ end }}" | envchain -s default OPENAI_API_KEY > /dev/null

    ### PyPi
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "PYPI_TOKEN")) }}{{ includeTemplate "secrets/PYPI_TOKEN" | decrypt }}{{ else }}{{ env "PYPI_TOKEN" }}{{ end }}" | envchain -s default PYPI_TOKEN > /dev/null

    ### Snapcraft
    echo "{{ .user.snapcraft.username }}" | envchain -s default SNAPCRAFT_EMAIL > /dev/null
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "SNAPCRAFT_MACAROON")) }}{{ includeTemplate "secrets/SNAPCRAFT_MACAROON" | decrypt }}{{ else }}{{ env "SNAPCRAFT_MACAROON" }}{{ end }}" | envchain -s default SNAPCRAFT_MACAROON > /dev/null
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "SNAPCRAFT_UNBOUND_DISCHARGE")) }}{{ includeTemplate "secrets/SNAPCRAFT_UNBOUND_DISCHARGE" | decrypt }}{{ else }}{{ env "SNAPCRAFT_UNBOUND_DISCHARGE" }}{{ end }}" | envchain -s default SNAPCRAFT_UNBOUND_DISCHARGE > /dev/null

    ### Surge.sh
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "SURGE_LOGIN")) }}{{ includeTemplate "secrets/SURGE_LOGIN" | decrypt }}{{ else }}{{ env "SURGE_LOGIN" }}{{ end }}" | envchain -s default SURGE_LOGIN > /dev/null
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "SURGE_TOKEN")) }}{{ includeTemplate "secrets/SURGE_TOKEN" | decrypt }}{{ else }}{{ env "SURGE_TOKEN" }}{{ end }}" | envchain -s default SURGE_TOKEN > /dev/null

    ### Vagrant Cloud
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "VAGRANT_CLOUD_TOKEN")) }}{{ includeTemplate "secrets/VAGRANT_CLOUD_TOKEN" | decrypt }}{{ else }}{{ env "VAGRANT_CLOUD_TOKEN" }}{{ end }}" | envchain -s default VAGRANT_CLOUD_TOKEN > /dev/null

    ### Xcodes
    # Apple ID username and password
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "APPLE_USERNAME")) }}{{ includeTemplate "secrets/APPLE_USERNAME" | decrypt }}{{ else }}{{ env "APPLE_USERNAME" }}{{ end }}" | envchain -s default XCODES_USERNAME > /dev/null
    echo "{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "APPLE_PASSWORD")) }}{{ includeTemplate "secrets/APPLE_PASSWORD" | decrypt }}{{ else }}{{ env "APPLE_PASSWORD" }}{{ end }}" | envchain -s default XCODES_PASSWORD > /dev/null

    logg info 'Set environment variables in the current shell`
    export $(comm -1 -3 <(env|sort) <(envchain default env|sort))
else
    logg info '`envchain` is not available or is not installed'

    ### Ansible
    export ANSIBLE_GALAXY_TOKEN="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "ANSIBLE_GALAXY_TOKEN")) }}{{ includeTemplate "secrets/ANSIBLE_GALAXY_TOKEN" | decrypt | nospace }}{{ else }}{{ env "ANSIBLE_GALAXY_TOKEN" }}{{ end }}"
    export ANSIBLE_VAULT_PASSWORD="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "ANSIBLE_VAULT_PASSWORD")) }}{{ includeTemplate "secrets/ANSIBLE_VAULT_PASSWORD" | decrypt | trim }}{{ else }}{{ env "ANSIBLE_VAULT_PASSWORD" }}{{ end }}"
    export AVP="$ANSIBLE_VAULT_PASSWORD"

    ### Google Cloud SDK
    export CLOUDSDK_CORE_PROJECT="{{ .user.gcloud.coreProject }}"
    export GCE_SERVICE_ACCOUNT_EMAIL="{{ .user.gcloud.email }}"
    export GCE_CREDENTIALS_FILE="$HOME/.config/gcloud/gcp.json"

    ### CloudFlare
    export LEXICON_CLOUDFLARE_TOKEN=""
    export LEXICON_CLOUDFLARE_USERNAME="{{ .user.cloudflare.username }}"

    ### DockerHub
    export DOCKERHUB_TOKEN="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "DOCKERHUB_TOKEN")) }}{{ includeTemplate "secrets/DOCKERHUB_TOKEN" | decrypt }}{{ else }}{{ env "DOCKERHUB_TOKEN" }}{{ end }}"
    export DOCKERHUB_REGISTRY_PASSWORD="$DOCKERHUB_TOKEN"

    ### GitHub
    export GH_TOKEN="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "GITHUB_TOKEN")) }}{{ includeTemplate "secrets/GITHUB_TOKEN" | decrypt }}{{ else }}{{ env "GITHUB_TOKEN" }}{{ end }}"
    export GITHUB_TOKEN="$GH_TOKEN"

    ### GitLab
    export GL_TOKEN="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "GITLAB_TOKEN")) }}{{ includeTemplate "secrets/GITLAB_TOKEN" | decrypt }}{{ else }}{{ env "GITLAB_TOKEN" }}{{ end }}"
    export GITLAB_TOKEN="$GL_TOKEN"

    ### Heroku
    export HEROKU_API_KEY="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "HEROKU_API_KEY")) }}{{ includeTemplate "secrets/HEROKU_API_KEY" | decrypt }}{{ else }}{{ env "HEROKU_API_KEY" }}{{ end }}"

    ### NPM
    export NPM_TOKEN="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "NPM_TOKEN")) }}{{ includeTemplate "secrets/NPM_TOKEN" | decrypt }}{{ else }}{{ env "NPM_TOKEN" }}{{ end }}"

    ### OpenAI
    export OPENAI_API_KEY="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "OPENAI_API_KEY")) }}{{ includeTemplate "secrets/OPENAI_API_KEY" | decrypt }}{{ else }}{{ env "OPENAI_API_KEY" }}{{ end }}"

    ### PyPi
    export PYPI_TOKEN="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "PYPI_TOKEN")) }}{{ includeTemplate "secrets/PYPI_TOKEN" | decrypt }}{{ else }}{{ env "PYPI_TOKEN" }}{{ end }}"

    ### Snapcraft
    export SNAPCRAFT_EMAIL="{{ .user.snapcraft.username }}"
    export SNAPCRAFT_MACAROON="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "SNAPCRAFT_MACAROON")) }}{{ includeTemplate "secrets/SNAPCRAFT_MACAROON" | decrypt }}{{ else }}{{ env "SNAPCRAFT_MACAROON" }}{{ end }}"
    export SNAPCRAFT_UNBOUND_DISCHARGE="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "SNAPCRAFT_UNBOUND_DISCHARGE")) }}{{ includeTemplate "secrets/SNAPCRAFT_UNBOUND_DISCHARGE" | decrypt }}{{ else }}{{ env "SNAPCRAFT_UNBOUND_DISCHARGE" }}{{ end }}"

    ### Surge.sh
    export SURGE_LOGIN="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "SURGE_LOGIN")) }}{{ includeTemplate "secrets/SURGE_LOGIN" | decrypt }}{{ else }}{{ env "SURGE_LOGIN" }}{{ end }}"
    export SURGE_TOKEN="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "SURGE_TOKEN")) }}{{ includeTemplate "secrets/SURGE_TOKEN" | decrypt }}{{ else }}{{ env "SURGE_TOKEN" }}{{ end }}"

    ### Vagrant Cloud
    export VAGRANT_CLOUD_TOKEN="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "VAGRANT_CLOUD_TOKEN")) }}{{ includeTemplate "secrets/VAGRANT_CLOUD_TOKEN" | decrypt }}{{ else }}{{ env "VAGRANT_CLOUD_TOKEN" }}{{ end }}"

    ### Xcodes
    # Apple ID username and password
    export XCODES_USERNAME="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "APPLE_USERNAME")) }}{{ includeTemplate "secrets/APPLE_USERNAME" | decrypt }}{{ else }}{{ env "APPLE_USERNAME" }}{{ end }}"
    export XCODES_PASSWORD="{{ if (stat (joinPath .chezmoi.sourceDir ".chezmoitemplates" "secrets" "APPLE_PASSWORD")) }}{{ includeTemplate "secrets/APPLE_PASSWORD" | decrypt }}{{ else }}{{ env "APPLE_PASSWORD" }}{{ end }}"
fi

### Install Doctor
export HEADLESS_INSTALL=true
export SOFTWARE_GROUP="Full"
export FULL_NAME="Brian Zalewski"
export PRIMARY_EMAIL="help@megabyte.space"
export PUBLIC_SERVICES_DOMAIN="megabyte.space"
export RESTRICTED_ENVIRONMENT=false
export WORK_ENVIRONMENT=false
export HOST="$HOST"

# Set to work environment if Cisco applications are installed (modify this to your liking)
if [ -d /Applications/Cisco ]; then
    export WORK_ENVIRONMENT=true
fi

### Megabyte Labs
export FULLY_AUTOMATED_TASKS=true

{{ end -}}
